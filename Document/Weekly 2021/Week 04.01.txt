1. 쓰레드 풀
2. JobQueue - 일을 처리하는 방식
3. 패킷 모아보내기
4. 타이머


◆C# 쓰레드풀에 대한 이해도 부족, 어떻게 관리하는 것이 좋을까?..

쓰레드풀에서 내가 직접 쓰레드의 개수 제한 둬도 되는가??

MSDN  - 최대 개수는 조절하지 않는 것이 좋다. 잘못하면 무한루프에 빠진다. 
          - 최대 쓰레드 풀의 개수는 런타임 시에 자동으로 정해지는 거 같다.

출처 - https://docs.microsoft.com/ko-kr/windows/win32/procthread/thread-pooling


◆직접적으로 일감에 접근하면 생기는 문제점

생성되고 대기하는 쓰레드가 너무 많아짐.
그렇기 때문에 JobQueue가 필요함.
일감만 던져놓고 바로 빠져나오게 하면 쓰레드가 줄어듬.

◆동시 다발적으로 많은 일이 들어온다면?? 
	
일이 밀리면 쓰레드풀 차원에서 일감을 처리하는 쓰레드를 계속 생성하는데 
근데 그 새로 생성된 쓰레드도 그 일감을 실행하지 못해서 계속해서 쓰레드가 쌓이게 된다.

◆동시 다발적으로 많은 일이 들어와도 JobQueue가 있다면?? 

멀티쓰레드 환경에서 생성되고 대기하는 쓰레드수가 줄어듬
요청이 온 것을 일감 단위로 만들어서 나중에 실행하게끔 Queue에 쌓아놓는게 핵심!
기존처럼 lock으로 접근하면 쓰레드풀에서 너무 많은 쓰레드가 생성되고 대기하게 됨

◆이중 lock 걸지 않도록 주의하자!

JobQueue 사용하면 비록 멀티쓰레드지만 JobQueue 안에서 실질적으로 1개의 쓰레드만 실행된다는 것이 보장됨. 
JobQueue에 이미 lock을 걸어놨음. 
반드시 lock이 사용되는 부분을 보고 절대로 이중 lock 걸지말자.

◆패킷 요청올 때 마다 계속해서 보내면 N'2의 Send 횟수는 엄청난 부하

해결방법 : 패킷을 모아서 보내야 한다.
List 자료구조에 패킷을 모은다.
이 모은 것을 약 0.25초마다 한번씩으로 지정하긴 했음. 
이 부분은 나중에 직접 해보면서 조절해봐야 한다고 생각함.

◆나중에 클라<--> 서버 싱크를 맞추기 위해 타이머 구현
우선순위큐를 이용해서 만듬. 
Tick을 이용해 매번 사용하는 것은 너무 노가다라고 생각.

◆서버에서 유니티의 객체를 못 찾는 문제점 발생

원인 : 유니티를 구동하고 있는 메인쓰레드에서 구동하는 것이 아니라 서버에 있는 쓰레드풀에 있는 쓰레드를
꺼내와서 실행하고 있다는 것이 문제임
유니티의 정책은 유니티 메인 쓰레드에서만 유니티 객체 접근 가능.

◆서버에서 유니티의 객체에 접근 못한다면 어떻게 해결해야하는가?

유니티 메인 쓰레드에서 실행되도록 해야한다.
서버에서 패킷을 만든 다음 바로 처리하는 것이 아니라 그 패킷을 Queue에다가 넣어놓고 
유니티쪽 메인 쓰레드에서 처리하도록 만듬.


※심리스 게임은 어떻게 처리해야하는가에 대한 고민...

하나의 영역(맵) 일때 어떻게 해야하는가..
영역마다 해야할 일을 따로 처리하는 JobQueue 같은 것을 만들어 줘야 하는가...
근데 재수없게 만약 영역이 서로 딱 겹치는 순간이 생길때는 어떻게 해야하는가...

※서버가 관리해야 할 부분과 클라이언트가 관리해야 할 부분에 대한 고민

반드시 서버가 관리해야 할 것들과 어느 정도는 클라이언트에서 처리해도 되는 일들에 대한
부분을 정하고 판단하는 것이 어려움..

(1) 맵이 너무 크고 오브젝트도 매우 많음 --> 모든 것을 서버에서 관리가 가능할지 모르겠음
정적인 오브젝트(나무, 돌맹이) 같은 것들은 클라에서 하고 나머지 중요한 부분만 서버에서 관리해도 되는가?

(2) 3D 게임에서의 충돌처리는 어떻게 해야하고 얼만큼이 서버에서 처리해야 하는가??.. 

아직까지 2D 지형에서의 충돌처리 하는 방법밖에 해본적이 없고 그 2D 지형도 사실은 
서버에서 만든 다음 클라이언트에게 넘겨주는 식이였다.

3D 지형의 맵과 오브젝트를 서버에서 얼만큼 처리해야하고 어떻게 처리해야 할지에 대해 감이 잘 잡히지 않는다.  







